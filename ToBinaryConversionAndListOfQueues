#include<iostream>
#include<queue>
using namespace std;

class Node{
public:
	 int info;
	 Node* next;
};

class Queue{
private:
	Node* first;
	Node* last;
public:
	Queue()
	{
		first = NULL;
		last = NULL;		
	}

	void push(int data)
	{
		
		Node *temp = new Node;
		
		temp->info = data;
		temp->next = NULL;
		if (first == NULL){
			first = temp;
		}
		else{
			last->next = temp;
		}

		last = temp;
	
	}

	void pop()
	{
		Node *temp = new Node;

		if (first == NULL)
		{
			cout << "Queue is empty";
		}
		else{
			temp = first;
			first = first->next;
			delete temp;
		}


	}

	void print()
	{
		Node *p = new Node;
		p = first;

		if (first == NULL){
			cout << "empty bruuh";
		}
		else{
			while (p != NULL){
				cout << endl << p->info;
				p = p->next;
			
			}
		}

	}

};
void something(int p,int q,int a[10])
{
	queue<int> fi;
	queue<int> se;
	for (int i = 0; i < 10; i++)
	{
		if (a[i] < p)
		{
			cout << a[i] << " ";
		}
		if (a[i] >= p && a[i] <= q)
		{
			fi.push(a[i]);
		}
		if (a[i] > q)
		{
			se.push(a[i]);
		}
			
	}
	while (!fi.empty())
	{
		cout << fi.front() << " ";
		fi.pop();
	}

	while (!se.empty())
	{
		cout << se.front() << " ";
		se.pop();
	}
}

int main()
{
	queue<int> first;
	queue<int> second;
	queue<int> third;


	queue<queue <int> > fourth;
	int a[10] = { 1,7,5,3,25,22,4,6,18,15};

	for (int i = 0; i < 100; i++)
	{
		if ((i % 3) == 1)
		{
			first.push(i);
		}

		if ((i % 3) == 2)
		{
			second.push(i);
		}

		if ((i % 3) == 0)
		{
			third.push(i);
		}

	}

	/*
		fourth.push(first);
		fourth.push(second);
		fourth.push(third);

		while (!fourth.empty())
		{
			while (!(fourth.front()).empty())
			{
				cout << (fourth.front()).front()<<" ";
				(fourth.front()).pop();
			}
			cout << endl;
			fourth.pop();

		}
    */

	

	Queue t;
	t.push(5);
	t.push(6);
	t.push(7);
	t.print();
	t.pop();
	t.print();

	

	
	system("pause");
	return 0;

}

